# This file contains common pin mappings for the BigTreeTech SKR PRO.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKK Pro with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm SKR Pro 1.1 & EXP MOT TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				    [gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps					[extruder] section


[mcu]
##	MCU for X/Y/Z steppers main MCU
##	[X in X] - B Motor
##	[Y in Y] - A Motor
##	[Z in Z] - Front Left
##	[Z1 in E0] - Rear Left
##	[Z2 in E1] - Rear Right
##	[23 in E2] - Front Right
##	[E in M1] - Extruder (BTT EXP MOT)
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_360052001051383438373634-if00
restart_method: command
##--------------------------------------------------------------------
## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000    			#Max 4000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  SensorLess Endstop
[stepper_x]
##	Connected to X on SKR Pro (B Motor)
step_pin: PE9
dir_pin: PF1
enable_pin: !PF2
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: PB10
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -8
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 310mm build
position_endstop: 318
position_max: 318

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC13
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

# SensorLess Homing
driver_SGTHRS: 65   # 0-255 sensorless homing sensitivity 0= less senstive 255= more sensitive
diag_pin: PB10

##  A Stepper - Right
##  SensorLess Endstop
[stepper_y]
##	Connected to Y on SKR Pro (A Motor)
step_pin: PE11
dir_pin: PE8
enable_pin: !PD7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: PE12
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -15
##--------------------------------------------------------------------

##	Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##	Uncomment for 310mm build
position_endstop: 325
position_max: 325

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE3
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

## SensorLess Homing
driver_SGTHRS: 65   # 0-255 sensorless homing sensitivity 0= less senstive 255= more sensitive
diag_pin: PE12

#####################################################################
# 	Z Stepper Settings
#####################################################################

## SKR Pro - In Z Position
## Z0 Stepper - Front Left
##  Endstop connected to PG8
[stepper_z]
step_pin: PE13
dir_pin: !PC2
enable_pin: !PC0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
#endstop_pin: PG8   # TODO : Redefine PIN later to use dowel.
endstop_pin: probe:z_virtual_endstop    # TODO : Comment to use dowel.
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5 # TODO : Enable to use dowel.
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
position_max: 250   # 250 is not possible with panzer chain

##	Uncomment below for 300mm build
#position_max: 290

##	Uncomment below for 350mm build
#position_max: 340

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PE1
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	SKR Pro - In EO Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE14
dir_pin: PA0
enable_pin: !PC3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	SKR Pro - In E1 Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PD15
dir_pin: !PE7
enable_pin: !PA3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	SKR Pro - In E2 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD13
dir_pin: PG9
enable_pin: !PF0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on BTT EXP MOT M1
##  Heater - Heat0
##  Thermistor - T1
[extruder]
step_pin: EXP2_6
dir_pin: EXP2_4
enable_pin: !EXP2_7
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PB1     # Heat0
##	Validate the following thermistor type to make sure it is correct
#sensor_type: EPCOS 100K B57560G104F
sensor_type: ATC Semitec 104GT-2
sensor_pin:  PF4    # T1 Header
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.07
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##	M1 on BTT EXP MOT
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EXP1_6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SKR Pro Heated Bed
##  SSR Pin - Heat1
##  Thermistor - T0
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PD12
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: XXX
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3     # T0
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z PROBE MIN on SKR Pro
##	If your probe is NO instead of NC, change pin to !^PA2
pin: ^PA2
x_offset: 0
y_offset: 25.0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 10

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - Fan2 on SKR Pro
pin: PE6
#max_power: 1.0
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##	Hotend Fan - Fan1 on SKR Pro
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##	Controller fan - Fan0 on SKR Pro
pin: PC8
kick_start_time: 0.5
heater: heater_bed

#[heater_fan exhaust_fan]
##	Exhaust fan - HE2 on SKR Pro
#pin: PB0
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - TBD on SKR Pro
#pin: TBD
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:155,155    # TODO
speed:100
z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25

##	Gantry Corners for 310mm Build
##	Uncomment for 310mm build
gantry_corners:
	-60,-10
	370,380
##	Probe points
points:
    50,25
	50,235
	260,235
	260,25


##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
#gantry_corners:
#	-60,-10
#	410,420
##	Probe points
#points:
#	50,25
#	50,275
#	300,275
#	300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
# 	BedMesh
#####################################################################
# FOLLOW THE FORUMULA FOR relative_reference_index, for example:
# [(9x9)-1] / 2 = 40
# [(7x7)-1] / 2 = 24
# [(5x5)-1] / 2 = 12
[bed_mesh]
mesh_min: 15, 25
mesh_max: 300,290
speed: 300  # 350 ?
horizontal_move_z: 10
probe_count: 9,9
algorithm: bicubic
relative_reference_index: 40
#fade_start: 1
#   Default is 1.0.
#fade_end: 10
#   Default is 0.0, which disables fade.
#fade_target: 0
#   The z position in which fade should converge.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
split_delta_z: 0.0125
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: 0.2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

#--------------------------------------------------------------------
########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG4, EXP1_2=PA8,
	EXP1_3=PD11, EXP1_4=PD10,
	EXP1_5=PG2, EXP1_6=PG3,			# Slot in the socket on this side
	EXP1_7=PG6, EXP1_8=PG7,
	EXP1_9=<GND>,EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
	EXP2_3=PG10, EXP2_4=PB12,
	EXP2_5=PF11, EXP2_6=PB15,		# Slot in the socket on this side
	EXP2_7=PF12, EXP2_8=<RST>,
	EXP2_9=<GND>, EXP2_10=PF13,
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi2"

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have. Display connects to SKR Pro
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

[display]
##	BTT TFT2.4 1.1
lcd_type: emulated_st7920
en_pin: EXP1_4

spi_software_sclk_pin: EXP1_5
spi_software_mosi_pin: EXP1_3
spi_software_miso_pin: EXP1_7
#spi_software_miso_pin: EXP2_1  # Other Config. To Check
#spi_speed: 1000000
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel.
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#--------------------------------------------------------------------

[output_pin power]
pin: PC9
value: 1

#####################################################################
# 	Macros
#####################################################################

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool:
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}

	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600

    ##	Uncomment for 310 build
    G0 X155 Y155 Z30 F3600

    ##	Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
	    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
	G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    BED_MESH_PROFILE LOAD=default

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800				   ; retract filament
    G91                            ; relative positioning
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  CLEAR_PAUSE
  G1 X0 Y0 Z10
  M84 XYE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro M81]
gcode:
 SET_PIN PIN=power value=0

[gcode_macro M80]
gcode:
 SET_PIN PIN=power value=1

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}

	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED

	# Absolute positioning
	G90

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}

		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[virtual_sdcard]
path: ~/gcode_files

[pause_resume]

#   Raspberry Pi temperature monitoring
[temperature_sensor pi_cpu]
sensor_type: temperature_host
gcode_id: P

#####################################################################
# 	INPUT SHAPER
#####################################################################

# TESTS
#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    155,155,20  # an example

# RESULTS
[input_shaper]
shaper_freq_x: 43.6
shaper_type_x: 2hump_ei
shaper_freq_y: 51.8
shaper_type_y: mzv


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 4.080
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.054
#*# pid_ki = 1.534
#*# pid_kd = 223.712
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.956
#*# pid_ki = 2.077
#*# pid_kd = 138.794
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.460000, 0.470000, 0.537500, 0.477500, 0.402500, 0.437500, 0.452500, 0.470000, 0.435000
#*# 	0.382500, 0.372500, 0.405000, 0.247500, 0.385000, 0.320000, 0.390000, 0.385000, 0.377500
#*# 	0.405000, 0.270000, 0.322500, 0.265000, 0.302500, 0.307500, 0.300000, 0.305000, 0.347500
#*# 	0.345000, 0.275000, 0.267500, 0.192500, 0.217500, 0.135000, 0.280000, 0.285000, 0.282500
#*# 	0.080000, 0.187500, 0.252500, 0.210000, 0.000000, 0.232500, 0.225000, 0.257500, 0.250000
#*# 	0.340000, 0.252500, 0.277500, 0.192500, 0.252500, 0.145000, 0.270000, 0.297500, 0.275000
#*# 	0.377500, 0.255000, 0.322500, 0.280000, 0.315000, 0.307500, 0.272500, 0.320000, 0.385000
#*# 	0.432500, 0.385000, 0.407500, 0.335000, 0.387500, 0.340000, 0.372500, 0.397500, 0.390000
#*# 	0.327500, 0.462500, 0.507500, 0.460000, 0.310000, 0.377500, 0.440000, 0.490000, 0.512500
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 4
#*# min_y = 25.0
#*# x_count = 9
#*# max_y = 289.96
#*# mesh_x_pps = 4
#*# max_x = 299.96
